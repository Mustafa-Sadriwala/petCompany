{"version":3,"sources":["components/utils.js","components/petInserter.js","components/appointmentInserter.js","components/productInserter.js","components/clientInserter.js","components/queryTable.js","components/selector.js","components/stateTable.js","App.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","Title","Typography","Text","PetInserter","props","state","owner_id","name","breed","species","handleInputChange","bind","handleSubmit","handleOwnerIdChange","event","this","setState","target","value","console","log","post","then","res","alert","status","data","style","marginBottom","span","onChange","allowClear","onClick","React","Component","AppointmentInserter","duration","start_time","Date","groomer_ID","owner_ID","pet","handleDurationChange","handleGroomerIDChange","handleOwnerIDChange","preventDefault","defaultValue","now","ProductInserter","quantity","brand","price","handleQuantityChange","handlePriceChange","formatter","step","ClientInserter","fname","minit","lname","phone_number","email","address","birthday","placeholder","QueryTable","ds","table","map","row","i","key","c","push","title","dataIndex","dataSource","columns","default","pagination","showLessItems","position","showQuickJumper","pageSize","pageSizeOptions","Option","Select","TextArea","Input","Selector","query","handleChange","changeQuery","x","get","params","width","offset","StateTable","tablename","TabPane","Tabs","App","className","tab","justify","gutter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.970947f1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8000/',\n});\n\nexport default instance;","import React from 'react';\nimport instance from './utils';\nimport { Button, Input, InputNumber } from 'antd';\nimport { Typography, Divider } from 'antd';\n\nimport { Col, Row } from 'antd';\nimport 'antd/es/col/style/css';\nimport 'antd/es/row/style/css';\n\nimport 'antd/es/button/style/css';\nimport 'antd/es/input-number/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/typography/style/css';\nimport 'antd/es/divider/style/css';\n\n\nconst { Title, Text } = Typography;\n\n\nclass PetInserter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            owner_id: 0,\n            name: '',\n            breed: '',\n            species: '',\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleOwnerIdChange = this.handleOwnerIdChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleOwnerIdChange(value) {\n        this.setState({owner_id: value});\n    }\n\n    handleSubmit(event) {\n        console.log(this.state)\n        instance.post('/', ['pet', this.state]).then(function(res) {\n            console.log(res);\n            alert(`${res.status}: ${res.data}`);\n        });\n        \n        //event.preventDefault();\n        //construct query to insert\n    }\n\n    render() {\n        return (\n            <div>\n                <Title>\n                    New Pet\n                </Title>\n                <Divider />\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Owner ID</Text>\n                        </Col>\n                        <Col span={6}>\n                            <InputNumber name='owner_id' value={this.state.owner_id} onChange={this.handleOwnerIdChange}/>\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Name</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='name' value={this.state.name} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Breed</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='breed' value={this.state.breed} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Species</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='species' value={this.state.species} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row> \n               </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Button onClick={this.handleSubmit}>\n                        Insert Pet\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PetInserter;","import React from 'react';\nimport instance from './utils';\nimport { Button, Input, InputNumber } from 'antd';\nimport { Typography, Divider } from 'antd';\nimport { TimePicker } from 'antd';\nimport { Col, Row } from 'antd';\nimport 'antd/es/col/style/css';\nimport 'antd/es/row/style/css';\nimport 'antd/es/time-picker/style/css';\nimport 'antd/es/button/style/css';\nimport 'antd/es/input-number/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/typography/style/css';\nimport 'antd/es/divider/style/css';\n\nconst {Title, Text} = Typography\n\nclass AppointmentInserter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            duration: 0,\n            start_time: new Date(),\n            groomer_ID: 0,\n            owner_ID: 0,\n            pet: ''\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDurationChange = this.handleDurationChange.bind(this);\n        this.handleGroomerIDChange = this.handleGroomerIDChange.bind(this);\n        this.handleOwnerIDChange = this.handleOwnerIDChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleDurationChange(value) {\n        this.setState({duration: value});\n    }\n\n    handleGroomerIDChange(value) {\n        this.setState({groomer_ID: value});\n    }\n\n    handleOwnerIDChange(value) {\n        this.setState({owner_ID: value});\n    }\n\n    handleSubmit(event) {\n        console.log(this.state)\n        instance.post('/', ['appointment', this.state]).then(function(res) {\n            console.log(res);\n            alert(`${res.status}: ${res.data}`);\n        });\n        \n        event.preventDefault();\n        //construct query to insert\n    }\n\n    render() {\n        return (\n            <div>\n                <Title>\n                    New Appointment\n                </Title>\n                <Divider />\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Duration</Text>\n                        </Col>\n                        <Col span={6}>\n                            <TimePicker name='duration' value={this.state.duration} onChange={this.handleDurationChange}/>\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Start Time</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input defaultValue={Date.now()} allowClear name='start_time' value={this.state.start_time} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Groomer ID</Text>\n                        </Col>\n                        <Col span={6}>\n                            <InputNumber name='groomer_id' value={this.state.groomer_ID} onChange={this.handleGroomerIDChange}/>\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Owner ID</Text>\n                        </Col>\n                        <Col span={6}>\n                            <InputNumber name='owner_id' value={this.state.owner_ID} onChange={this.handleOwnerIDChange}/>\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Pet Name</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='pet' value={this.state.pet} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Button onClick={this.handleSubmit}>\n                        Insert Appointment\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AppointmentInserter;","import React from 'react';\nimport instance from './utils';\nimport { Button, Input, InputNumber } from 'antd';\nimport { Typography, Divider } from 'antd';\n\nimport { Col, Row } from 'antd';\nimport 'antd/es/col/style/css';\nimport 'antd/es/row/style/css';\n\nimport 'antd/es/button/style/css';\nimport 'antd/es/input-number/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/typography/style/css';\nimport 'antd/es/divider/style/css';\n\nconst { Title, Text } = Typography;\n\nclass ProductInserter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            quantity: 0,\n            brand: '',\n            name: '',\n            price: 0,\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleQuantityChange = this.handleQuantityChange.bind(this);\n        this.handlePriceChange = this.handlePriceChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleQuantityChange(value) {\n        this.setState({quantity: value});\n    }\n\n    handlePriceChange(value) {\n        this.setState({price: value});\n    }\n\n    handleSubmit(event) {\n        console.log(this.state)\n        instance.post('/', ['store_products', this.state]).then(function(res) {\n            console.log(res);\n            alert(`${res.status}: ${res.data}`);\n        });\n        \n        event.preventDefault();\n        //construct query to insert\n    }\n\n    render() {\n        return (\n            <div>\n                <Title>\n                    New Product\n                </Title>\n                <Divider />\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Quantity</Text>\n                        </Col>\n                        <Col span={6}>\n                            <InputNumber name='quantity' value={this.state.quantity} onChange={this.handleQuantityChange}/>\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Brand</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='brand' value={this.state.brand} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Name</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='name' value={this.state.name} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Price</Text>\n                        </Col>\n                        <Col span={6}>\n                            <InputNumber\n                            defaultValue={0}\n                            formatter={value => `$ ${value}`}\n                            step={0.1}\n                            name='price' value={this.state.price} onChange={this.handlePriceChange}/>\n                        </Col>\n                    </Row> \n               </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Button onClick={this.handleSubmit}>\n                        Insert Product\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductInserter;","import React from 'react';\nimport instance from './utils';\nimport { Button, Input } from 'antd';\nimport { Typography, Divider } from 'antd';\n\nimport { Col, Row } from 'antd';\nimport 'antd/es/col/style/css';\nimport 'antd/es/row/style/css';\n\nimport 'antd/es/button/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/typography/style/css';\nimport 'antd/es/divider/style/css';\n\nconst { Title, Text } = Typography;\n\nclass ClientInserter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fname: '',\n            minit: '',\n            lname: '',\n            phone_number: '',\n            email: '',\n            address: '',\n            birthday: ''\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(event) {\n        this.setState({[event.target.name]: event.target.value});\n    }\n\n    handleSubmit(event) {\n        console.log(this.state)\n        instance.post('/', ['client', this.state]).then(function(res) {\n            console.log(res);\n            alert(`${res.status}: ${res.data}`);\n        });\n        \n        event.preventDefault();\n        //construct query to insert\n    }\n\n    render() {\n        return (\n            <div>\n                <Title>\n                    New Client\n                </Title>\n                <Divider />\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Fname</Text>\n                        </Col>\n                        <Col span={12}>\n                            <Input placeholder='First Name' allowClear name='fname' value={this.state.fname} onChange={this.handleInputChange} />\n                        </Col>\n                        <Col span={3}>\n                            <Text>MInit</Text>\n                        </Col>\n                        <Col span={3}>\n                            <Input name='minit' \n                            value={this.state.minit} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>LName</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input placeholder='Last Name' allowClear name='lname' value={this.state.lname} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Phone Number</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='phone_number' value={this.state.phone_number} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Email</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='email' value={this.state.email} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Address</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='address' value={this.state.address} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Row>\n                        <Col span={6}>\n                            <Text>Birthday</Text>\n                        </Col>\n                        <Col span={18}>\n                            <Input allowClear name='birthday' value={this.state.birthday} onChange={this.handleInputChange} />\n                        </Col>\n                    </Row>\n                </div>\n                <div style={{ marginBottom: 16 }}>\n                    <Button onClick={this.handleSubmit}>\n                        Insert Client\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ClientInserter;","import React from 'react';\nimport { Table } from 'antd';\n\nfunction QueryTable(props) {\n    //console.log(props.table)\n    const ds = props.table.map((row, i) => {\n        return {\n            ...row, key: i+1\n        };\n    });\n    const c = [];\n    for (const key in props.table[0]) {\n        //console.log(key);\n        c.push({\n            title: key,\n            dataIndex: key\n        })\n    }\n    return (\n        <Table dataSource={ds} columns={c} default\n        pagination={{ showLessItems: true, position: [\"bottomCenter\"], showQuickJumper: false, pageSize: (props.pageSize ? 5 : 10),pageSizeOptions: ['5', '10', '20'] }} />\n    );\n}\n\nexport default QueryTable;","import React from 'react';\nimport instance from './utils';\nimport QueryTable from './queryTable';\nimport { Card } from 'antd';\nimport { Select } from 'antd';\nimport { Row, Col, Input } from 'antd';\nimport { Typography, Divider } from 'antd';\nimport { Button } from 'antd';\n\nimport 'antd/es/card/style/css';\nimport 'antd/es/row/style/css';\nimport 'antd/es/col/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/typography/style/css';\nimport 'antd/es/divider/style/css';\nimport 'antd/es/button/style/css';\nimport 'antd/es/select/style/css';\n\n\nconst { Title, Text } = Typography\nconst { Option } = Select\nconst { TextArea } = Input\n\nclass Selector extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: 0,\n            table: null,\n            query: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.changeQuery = this.changeQuery.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(x) {\n        this.setState({value: x});\n    }\n\n    changeQuery(event) {\n        this.setState({query: event.target.value});\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n        let x;\n        if (this.state.value === 5 && this.state.query !== '') {\n            x = await instance.get('/query', {\n                params: {\n                    value: this.state['query']\n                }\n            });\n        } else {\n            x = await instance.get('/sample-query', {\n                params: {\n                    value: this.state['value']\n                }\n            });\n        }\n\n        console.log(x.data);\n        this.setState({table: x.data});\n    }\n\n    render() {\n        return (\n            <div>\n                <Card>\n                    <Row>\n                        <Col>\n                            <Title>\n                                Queries\n                            </Title>\n                        </Col>\n                    </Row>\n                    <Divider/>\n                    <Row style={{'marginBottom': 15}}>\n                        <Col span={6}>\n                            <Text>\n                                Select Query:\n                            </Text>\n                        </Col>\n                        <Col span={18}>\n                            <Select style={{width: '100%'}} value={this.state.value} onChange={this.handleChange}>\n                            <Option value='0'>Show count of largest population</Option>\n                            <Option value='1'>Show a listing of a key entity in the database</Option>\n                            <Option value='2'>Show a list of entities that must function together \n                            (Show a list of managers and receptionists who work together (JOIN))</Option>\n                            <Option value='3'>Show the cost of an occurrence, derived \n                            using aggregate functions (Cost to groom a pet)</Option>\n                            <Option value='4'>Show a schedule for multiple occurrences, \n                            sorted by date and time (today’s appointments)</Option>\n                            <Option value='5'>Other</Option>\n                            </Select>\n                        </Col>\n                    </Row> \n                    {this.state.value === '5' && \n                    <Row style={{'marginBottom': 15}}>\n                        <Col offset={5} span={6}>\n                            <Text>\n                                Execute your own Query:\n                            </Text>\n                        </Col>\n                        <Col span={8}>\n                            <TextArea value={this.state.query} onChange={this.changeQuery} />\n                        </Col>\n                    </Row>}\n                    <Row style={{'marginBottom': 15}}>\n                        <Col offset={9} span={6}>\n                            <Button onClick={this.handleSubmit}>\n                                Execute \n                            </Button>\n                        </Col>\n                    </Row>\n                </Card>\n                <Row style={{'marginBottom': 30}}>\n                    <Col offset={6} span={12}>\n                    {this.state.table && (<Card>\n                    <QueryTable table={this.state.table} />\n                </Card>)}\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default Selector;","import React from 'react';\nimport instance from './utils';\nimport QueryTable from './queryTable';\n\nclass StateTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tablename: props.table,\n            table: null\n        };\n    }\n\n    async componentDidMount() {\n        let x = await instance.get('/query', {\n            params: {\n                value: `select * from ${this.state.tablename}`\n            }\n        })\n        this.setState({table: x.data});\n        //console.log(this.state);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    State of {this.state.tablename}\n                </h1>\n                {this.state.table && (\n                    <QueryTable pageSize={5} table={this.state.table}/>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default StateTable;","import React from 'react';\nimport './App.css';\n\nimport PetInserter from './components/petInserter';\nimport AppointmentInserter from './components/appointmentInserter';\nimport ProductInserter from './components/productInserter';\nimport ClientInserter from './components/clientInserter';\nimport Selector from './components/selector';\nimport StateTable from './components/stateTable';\nimport { Card, Col, Row } from 'antd';\nimport { Tabs } from 'antd';\n\nimport 'antd/es/card/style/css';\nimport 'antd/es/col/style/css';\nimport 'antd/es/row/style/css';\nimport 'antd/dist/antd.css';\n\nconst {TabPane} = Tabs;\n\n//console.log(PetInserter)\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Tabs>\n        <TabPane tab=\"INSERT\" key=\"1\">\n      <div style={{'padding': '30px', 'margin': '10px'}}>\n      <Row justify={\"center\"} gutter={16}>\n        <Col span={10}>\n          <Card>\n            <PetInserter />\n          </Card>\n        </Col>\n        <Col span={10}>\n          <Card>\n            <ClientInserter />\n          </Card>\n        </Col>\n      </Row>\n      </div>\n      <Row justify={\"center\"} gutter={16}>\n        <Col span={10}>\n          <Card>\n          <AppointmentInserter />\n          </Card>\n        </Col>\n        <Col span={10}>\n          <Card>\n            <ProductInserter />\n          </Card>\n        </Col>\n      </Row>\n      </TabPane>\n      <TabPane tab='STATE' key='2'>\n      <Row>\n        <Col span={24}>\n          <Card>\n            <StateTable table='Pet' />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Card>\n            <StateTable table='Client' />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Card>\n            <StateTable table='Appointment' />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Card>\n            <StateTable table='Store_Products' />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Card>\n            <StateTable table='Product_Species' />\n          </Card>\n        </Col>\n        <Col span={12}>\n          <Card>\n          <StateTable table='Species' />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Card>\n          <StateTable table='Employee' />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={8}>\n          <Card>\n            <StateTable table='Manager' />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <StateTable table='Groomer' />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <StateTable table='Receptionist' />\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={16}>\n        <Col span={16}>\n          <Card>\n            <StateTable table='Shift' />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <StateTable table='Groomer_Shift' />\n          </Card>\n        </Col>\n      </Row>\n      </TabPane>\n      <TabPane tab=\"QUERY\" key=\"3\">\n      <Row>\n        <Col span={24}>\n          <Selector />\n        </Col>\n      </Row>\n      </TabPane>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}